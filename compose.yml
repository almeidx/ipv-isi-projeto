x-rabbitmq-env: &rabbitmq-env
  RABBITMQ_HOST: rabbitmq
  RABBITMQ_USER: user
  RABBITMQ_PASS: password
  PYTHONUNBUFFERED: 1

x-postgres-env: &postgres-env
  POSTGRES_HOST: postgres
  POSTGRES_USER: user
  POSTGRES_PASS: password
  POSTGRES_DB: db
  PYTHONUNBUFFERED: 1

services:
  sensor_temperature:
    container_name: sensor_temperature
    build:
      context: sensor
      dockerfile: Dockerfile
      args:
        SENSOR_TYPE: temperature
    environment:
      <<: *rabbitmq-env
    depends_on:
      - receiver

  sensor_gas_concentration:
    container_name: sensor_gas_concentration
    build:
      context: sensor
      dockerfile: Dockerfile
      args:
        SENSOR_TYPE: gas_concentration
    environment:
      <<: *rabbitmq-env
    depends_on:
      - receiver

  sensor_humidity:
    container_name: sensor_humidity
    build:
      context: sensor
      dockerfile: Dockerfile
      args:
        SENSOR_TYPE: humidity
    environment:
      <<: *rabbitmq-env
    depends_on:
      - receiver

  receiver:
    container_name: receiver
    build:
      context: receiver
      dockerfile: Dockerfile
    environment:
      <<:
        - *rabbitmq-env
        - *postgres-env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy

  grapher:
    container_name: grapher
    build:
      context: grapher
      dockerfile: Dockerfile
    environment:
      <<: *postgres-env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./grapher/graphs:/app/graphs

  rabbitmq:
    image: rabbitmq:4-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-log:/var/log/rabbitmq
      - rabbitmq-conf:/etc/rabbitmq
    healthcheck:
      test: rabbitmqctl node_health_check
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s

  postgres:
    image: postgres:17-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U user
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 10s

volumes:
  rabbitmq-data:
  rabbitmq-log:
  rabbitmq-conf:
  postgres-data:
